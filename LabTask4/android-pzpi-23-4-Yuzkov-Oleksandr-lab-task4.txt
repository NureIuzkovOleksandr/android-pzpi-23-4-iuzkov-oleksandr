МІНІСТЕРСТВО ОСВІТИ І НАУКИ УКРАЇНИ
ХАРКІВСЬКИЙ НАЦІОНАЛЬНИЙ УНІВЕРСИТЕТ РАДІОЕЛЕКТРОНІКИ


КАФЕДРА ПРОГРАМНОЇ ІНЖЕНЕРІЇ




Звіт
з лабораторної роботи № 4 з дисципліни
Програмування під Android
   





Виконав:                                                                           Перевірив:
ст. гр. ПЗПІ-23-4                        				ст. викладач кафедри ПІ
Юзков Олександр						Сокорчук Ігор Петрович









Харків 2024 
ЗАВДАННЯ

Розробити застосунок для ведення нотаток, що має такі функції:
1.	Перегляд списку нотаток — користувач може переглядати всі нотатки.
2.	Створення нової нотатки — можливість додати нову нотатку, де вказуються:
o	Назва
o	Опис
o	Важливість (три рівні)
o	Час і дата призначення
o	Картинка (вибір з галереї)
3.	Редагування та видалення нотатки — можливість редагувати або видаляти нотатку:
o	Зміни не зберігаються після перезапуску додатку.
4.	Візуальне представлення нотаток:
o	Іконка з галереї.
o	Час створення, розміщений праворуч зверху дрібнішим шрифтом.
o	Іконка, що відображає клас важливості (іконка з множини).
5.	Контекстне меню — функції видалення та редагування викликаються через довгий натиск на нотатку.
6.	ActionBar — меню для додавання нової нотатки та фільтрації/пошуку нотаток за змістом та важливістю.
7.	Пошук та фільтрація:
o	Пошук нотаток за текстом.
o	Фільтрація нотаток за рівнем важливості.
8.	Локалізація — усі текстові елементи користувацького інтерфейсу повинні бути доступні українською та англійською мовами.
Основні функції повинні включати:
•	Додавання нових нотаток у список.
•	Видалення нотаток через контекстне меню.
•	Редагування нотаток, без збереження після перезапуску додатку.
•	Пошук і фільтрація за змістом і важливістю нотаток.
Цей застосунок повинен мати зручний та інтуїтивно зрозумілий інтерфейс, з акцентом на простоту взаємодії з користувачем.
 
ХІД РОБОТИ
Створюємо новий проєкт і обираємо шаблон Empty Views Activity. Починаємо з налаштування головного екрану та RecyclerView. Головна активність (MainActivity) відповідає за відображення списку нотаток і навігацію між екранами. Вона включає:
•	Ініціалізацію компонентів:
notesRecyclerView = findViewById(R.id.recyclerView);
dbHelper = new DatabaseHelper(this);

•	Встановлення RecyclerView із LinearLayoutManager для вертикального списку.
•	Підключення адаптера (NoteAdapter) для відображення списку нотаток.
Далі робимо меню та пошук. Використовується меню (menu_main) з елементами:
•	Сортування за важливістю та алфавітом:
toggleSortByImportance();
toggleSortByTitle();
Пошук за текстом:
searchView.setOnQueryTextListener(new SearchView.OnQueryTextListener() { ... });

Далі робимо додавання нової нотатки. Створюємо відповідну розмітку. Перехід до AddNoteActivity виконується кнопкою:
findViewById(R.id.addNoteButton).setOnClickListener(v -> navigateToAddNoteActivity());

Тепер робимо фільтрацію та сортування. Нотатки можна фільтрувати за текстом у назві або описі:
filteredNotes.clear();
 for (Note note : allNotes) {
     if (note.getDescription().toLowerCase().contains(query)) {
       filteredNotes.add(note);
    }
 }

Також реалізуємо сортування за важливістю та алфавітом:
Collections.sort(targetList, (n1, n2) -> Integer.compare(n1.getImportance(), n2.getImportance()));

Додаємо збереження нотатки з картинкою. AddNoteActivity дозволяє додавати картинку через вибір із галереї:
Intent intent = new Intent(Intent.ACTION_PICK, MediaStore.Images.Media.EXTERNAL_CONTENT_URI);
startActivityForResult(intent, PICK_IMAGE_REQUEST);

Обрані зображення зберігаються локально:
Uri saveImageLocally(Uri sourceUri) { ... }

Переходимо до адаптеру для відображення нотаток. NoteAdapter налаштовує вигляд кожного елемента списку. Використовує метод bind для встановлення значень:
holder.title.setText(note.getTitle());
holder.description.setText(note.getDescription());
holder.image.setImageURI(note.getImageUri());

Створимо контекстне меню для редагування та видалення нотаток. Довгий натиск на елемент викликає меню:
PopupMenu popupMenu = new PopupMenu(context, view);
popupMenu.inflate(R.menu.context_menu);
Дії для редагування та видалення викликаються через інтерфейс:
onNoteClickListener.onEditNoteClick(note, position);
onNoteClickListener.onDeleteNoteClick(note, position);

Дані зберігаються в базі даних. Для збереження, видалення та отримання нотаток використовується клас DatabaseHelper. Він також підтримує збереження зображень.
dbHelper.addNote(title, description, importance, dateTime, imageUriString);

Також робимо так щоб наш застосунок підтримував мультимовність через strings.xml:
<string name="app_name">Ваш додаток</string>
<string name="title">Заголовок</string>
<string name="description">Опис</string>
<string name="importance">Важливість</string>
<string name="select_image">Вибрати зображення</string>

Ми створили повноцінний застосунок, який зручно організує роботу з нотатками. Він дозволяє додавати текст і зображення, редагувати, видаляти та сортувати їх. Завдяки гнучкому адаптеру та інтеграції з базою даних, список нотаток оновлюється в реальному часі.
	


 
ВИСНОВКИ

Під час виконання лабораторної роботи я здобув практичні навички зі створення повноцінного проєкту для Android. Я навчився працювати з елементами інтерфейсу, реалізовувати функціональні можливості та налаштовувати локалізацію додатка.
Посилання на відео-звіт завантажений на YouTube: https://youtu.be/n_VUPz-oJOg
 
ВИКОРИСТАНІ ДЖЕРЕЛА

1.	Документація JavaRush з роботи з базами даних. URL: https://javarush.com/ua/quests/lectures/ua.questhibernate.level07.lecture00 (дата звернення: 1.01.2025)
2.	Документація ExamClouds з локалізації в Java. URL: https://www.examclouds.com/java/java-core-russian/internationalisation (дата звернення: 1.01.2025)
